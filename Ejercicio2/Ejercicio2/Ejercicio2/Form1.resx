<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xPkcm94TugkcS6HnSFR4OF/A/vf/2Q==
</value>
  </data>
</root>